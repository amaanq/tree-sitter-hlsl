================================================================================
Simple compute shader
================================================================================

[numthreads(group_width, 1, 1)]
void main(uint2 px: SV_DispatchThreadID, uint2 px_within_group: SV_GroupThreadID, uint2 group_id: SV_GroupID) {
  for (int xfetch = px_within_group.x; xfetch < vblur_window_size; xfetch += group_width) {
    vblur_into_shmem(px, xfetch, group_id);
  }
}

--------------------------------------------------------------------------------

(translation_unit
  (function_definition
    (entry_point_attribute
      (call_expression
        (identifier)
        (argument_list
          (identifier)
          (number_literal)
          (number_literal))))
    (primitive_type)
    (function_declarator
      (identifier)
      (parameter_list
        (parameter_declaration
          (type_identifier)
          (identifier)
          (identifier))
        (parameter_declaration
          (type_identifier)
          (identifier)
          (identifier))
        (parameter_declaration
          (type_identifier)
          (identifier)
          (identifier))))
    (compound_statement
      (for_statement
        (declaration
          (primitive_type)
          (init_declarator
            (identifier)
            (field_expression
              (identifier)
              (field_identifier))))
        (binary_expression
          (identifier)
          (identifier))
        (assignment_expression
          (identifier)
          (identifier))
        (compound_statement
          (expression_statement
            (call_expression
              (identifier)
              (argument_list
                (identifier)
                (identifier)
                (identifier)))))))))

================================================================================
uniform position
================================================================================
uniform float4 position : SV_POSITION; 
--------------------------------------------------------------------------------

(translation_unit
  (declaration
    (qualifiers)
    (type_identifier)
    (ERROR
      (identifier))
    (identifier)))

================================================================================
discard
================================================================================
discard;
--------------------------------------------------------------------------------

(translation_unit
  (discard_statement))

================================================================================
Packing
================================================================================
cbuffer MyBuffer
{
    float4 Element1 : packoffset(c0);
    float1 Element2 : packoffset(c0);
    float1 Element3 : packoffset(c0.y);
}
--------------------------------------------------------------------------------

(translation_unit
  (cbuffer_specifier
    (type_identifier)
    (field_declaration_list
      (field_declaration
        (type_identifier)
        (field_identifier)
        (bitfield_clause
          (call_expression
            (identifier)
            (argument_list
              (identifier)))))
      (field_declaration
        (type_identifier)
        (field_identifier)
        (bitfield_clause
          (call_expression
            (identifier)
            (argument_list
              (identifier)))))
      (field_declaration
        (type_identifier)
        (field_identifier)
        (bitfield_clause
          (call_expression
            (identifier)
            (argument_list
              (field_expression
                (identifier)
                (field_identifier))))))))
  (MISSING ";"))

================================================================================
Attributed fields
================================================================================

struct VsOut {
	float4 position: SV_Position;
    [[vk::location(0)]] float4 color: TEXCOORD0;
    [[vk::location(1)]] float2 uv: TEXCOORD1;
    [[vk::location(2)]] float3 normal: TEXCOORD2;
    [[vk::location(3)]] nointerpolation uint material_id: TEXCOORD3;
    [[vk::location(4)]] float3 tangent: TEXCOORD4;
    [[vk::location(5)]] float3 bitangent: TEXCOORD5;
    [[vk::location(6)]] float3 vs_pos: TEXCOORD6;
    [[vk::location(7)]] float3 prev_vs_pos: TEXCOORD7;
};
--------------------------------------------------------------------------------

(translation_unit
  (struct_specifier
    (type_identifier)
    (field_declaration_list
      (field_declaration
        (type_identifier)
        (field_identifier)
        (bitfield_clause
          (identifier)))
      (field_declaration
        (attribute_declaration
          (attribute
            (identifier)
            (identifier)
            (argument_list
              (number_literal))))
        (type_identifier)
        (field_identifier)
        (bitfield_clause
          (identifier)))
      (field_declaration
        (attribute_declaration
          (attribute
            (identifier)
            (identifier)
            (argument_list
              (number_literal))))
        (type_identifier)
        (field_identifier)
        (bitfield_clause
          (identifier)))
      (field_declaration
        (attribute_declaration
          (attribute
            (identifier)
            (identifier)
            (argument_list
              (number_literal))))
        (type_identifier)
        (field_identifier)
        (bitfield_clause
          (identifier)))
      (field_declaration
        (attribute_declaration
          (attribute
            (identifier)
            (identifier)
            (argument_list
              (number_literal))))
        (qualifiers)
        (type_identifier)
        (field_identifier)
        (bitfield_clause
          (identifier)))
      (field_declaration
        (attribute_declaration
          (attribute
            (identifier)
            (identifier)
            (argument_list
              (number_literal))))
        (type_identifier)
        (field_identifier)
        (bitfield_clause
          (identifier)))
      (field_declaration
        (attribute_declaration
          (attribute
            (identifier)
            (identifier)
            (argument_list
              (number_literal))))
        (type_identifier)
        (field_identifier)
        (bitfield_clause
          (identifier)))
      (field_declaration
        (attribute_declaration
          (attribute
            (identifier)
            (identifier)
            (argument_list
              (number_literal))))
        (type_identifier)
        (field_identifier)
        (bitfield_clause
          (identifier)))
      (field_declaration
        (attribute_declaration
          (attribute
            (identifier)
            (identifier)
            (argument_list
              (number_literal))))
        (type_identifier)
        (field_identifier)
        (bitfield_clause
          (identifier))))))
